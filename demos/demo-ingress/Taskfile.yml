# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
version: '3'


vars:
  S3NINJA_VERSION: 7.2.4 
  HOSTNAME: localhost
  NAMESPACE: demo-ingress
  KUBECTL: "kubectl --namespace {{.NAMESPACE}}"
  S3NINJA_URL: "http://{{.HOSTNAME}}:9444"
  S3NINJA_BUCKET_LIST: ("demo1" "demo2")
  INGRESS_NGINX_VERSION: "v1.1.1"
  INGRESS_NGINX_MANIFEST_URL: "https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-{{.INGRESS_NGINX_VERSION}}/deploy/static/provider/cloud/deploy.yaml"


tasks:
  status:
    cmds:
      - echo "*** Nodes"
      - "{{.KUBECTL}} get nodes"
      - echo "*** Pods"
      - "{{.KUBECTL}} get po"
      - echo "*** Services"
      - "{{.KUBECTL}} get svc"
    silent: true
    ignore_error: true

  kustomization:
    cmds:
      - |
       cat <<__EOF__ >deploy/namespace.yaml
       # Licensed to the Apache Software Foundation (ASF) under one
       # or more contributor license agreements.  See the NOTICE file
       # distributed with this work for additional information
       # regarding copyright ownership.  The ASF licenses this file
       # to you under the Apache License, Version 2.0 (the
       # "License"); you may not use this file except in compliance
       # with the License.  You may obtain a copy of the License at
       #
       #   http://www.apache.org/licenses/LICENSE-2.0
       #
       # Unless required by applicable law or agreed to in writing,
       # software distributed under the License is distributed on an
       # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
       # KIND, either express or implied.  See the License for the
       # specific language governing permissions and limitations
       # under the License.
       apiVersion: v1
       kind: Namespace
       metadata:
         name: {{.NAMESPACE}}
       __EOF__

      - |
       cat <<__EOF__ >deploy/kustomization.yaml
       apiVersion: kustomize.config.k8s.io/v1beta1
       kind: Kustomization
       namespace: {{.NAMESPACE}}
       images:
        - name: scireum/s3-ninja
          newTag: {{.S3NINJA_VERSION}}
       resources:
        - deployment.yaml
        - svc.yaml
        - namespace.yaml
        - ingress.yaml
       __EOF__

  kustomize:
   deps: ["kustomization"]
   cmds:
     - "{{.KUBECTL}} kustomize deploy"

  deploy:
   deps: ["kustomization"]
   vars:
   cmds:
    # Deploy ingress-nginx to dedicated namespace
    - "kubectl apply -f {{.INGRESS_NGINX_MANIFEST_URL}}"
    - "kubectl wait deploy/ingress-nginx-controller --for condition=available --timeout=60s --namespace ingress-nginx"
    # Apply k8s kustomization
    - "{{.KUBECTL}} apply -k deploy/"
    - "{{.KUBECTL}} wait pod --for condition=ready -l app.kubernetes.io/name=s3ninja --timeout=60s"

  undeploy:
   deps: ["kustomization"]
   cmds:
    - "kubectl delete -f {{.INGRESS_NGINX_MANIFEST_URL}}"
    - "{{.KUBECTL}} delete -k deploy/"
  
  redeploy:
    deps: ["undeploy", "deploy"]





  init:
    deps: ["deploy", "build-s3-client"]
    cmds:
      # Append "<bucket>.hostname" records to /etc/hosts if not already present
      - |
        list={{.S3NINJA_BUCKET_LIST}} 
        for bucket in "${list[@]}" ;
          do
           grep -qF "127.0.0.1 ${bucket}.{{.HOSTNAME}}" /etc/hosts || echo "127.0.0.1 ${bucket}.{{.HOSTNAME}}" | sudo tee -a /etc/hosts
          done
      # Create buckets and upload random files (s3ninja auto creates the buckets if not already existing)
      - "./s3-client upload-random-files"
      # Make buckets public
      - | 
        list={{.S3NINJA_BUCKET_LIST}} 
        for bucket in "${list[@]}" ;
          do
            curl "http://127.0.0.1:9444/ui/${bucket}?make-public"
          done
    env:
      S3NINJA_URL: "{{.S3NINJA_URL}}"
      S3NINJA_BUCKET_LIST: "{{.S3NINJA_BUCKET_LIST}}"
    dir: ./s3-client
    silent: true


  build-s3-client:
    run: once
    cmds:
    - "go build"
    dir: "./s3-client"

  list-files:
    deps: ["build-s3-client"]
    cmds:
    - "./s3-client list-files"
    env:
      S3NINJA_URL: "{{.S3NINJA_URL}}"
      S3NINJA_BUCKET_LIST: "{{.S3NINJA_BUCKET_LIST}}"
    dir: ./s3-client
